<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>cs143</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <antlr4.version>4.9.2</antlr4.version>
    <antlr4.dir>${project.build.directory}/generated-sources/antlr4</antlr4.dir>
  </properties>


  <dependencies>
    <!-- https://mvnrepository.com/artifact/java-cup/java-cup -->
<!--    <dependency>-->
<!--      <groupId>java-cup</groupId>-->
<!--      <artifactId>java-cup</artifactId>-->
<!--      <version>0.11</version>-->
<!--     <scope>system</scope>-->
<!--      <systemPath>/Users/bigo/Documents/codes/leran-codes/demo-codes/cs143/cs143/java-cup-11a.jar</systemPath>-->
<!--    </dependency>-->
    <!-- https://mvnrepository.com/artifact/org.netbeans.external/java-cup-11a -->
    <!-- https://mvnrepository.com/artifact/com.github.peterzeller/javacup -->
    <dependency>
      <groupId>com.github.peterzeller</groupId>
      <artifactId>javacup</artifactId>
      <version>11c</version>
    </dependency>

    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${antlr4.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- 	执行插件 antlr4:antlr4,根据语法文件(.g4)生成解析器(java)代码
          完整说明参见 antlr4-maven-plugin 官方文档：
          https://www.antlr.org/api/maven-plugin/latest/plugin-info.html
          也可以命令行执行 mvn antlr4:help -Ddetail=true -Dgoal=antlr4 查看在线说明
      -->
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>4.9.2</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr4</goal>
            </goals>
            <configuration>
              <arguments>
                <!-- 命令行参数 -package ${package} 定义生成java代码的包名-->
                <argument>-package</argument>
                <argument>cool</argument>
                <!-- 输出生成的Java源码文件位置
                     这里的输出文件夹定义一定要与上面 -package 定义的包名匹配
                 -->
                <argument>-o</argument>
                <argument>${antlr4.dir}/cool</argument>
              </arguments>
              <!-- 指定语法文件的编码方式,默认utf-8 -->
              <!--<inputEncoding>utf-8</inputEncoding>-->
              <!-- ANTLR 语法文件(.g4) 所在位置-->
              <sourceDirectory>src/main/antlr4/cool</sourceDirectory>
              <!-- 生成语法树侦听器(Listener)代码,默认为true -->
<!--              <listener>false</listener>-->
              <!-- 生成语法树访问器(Visitor)代码,默认为false-->
              <listener>false</listener>
              <visitor>true</visitor>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


</project>